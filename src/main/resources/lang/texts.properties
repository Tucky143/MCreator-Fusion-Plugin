modelement.particlemodel=Particle model
modelement.particlemodel.name=Create a particle model
modelement.particlemodel.description=A particle model allows for using java models as particles
elementgui.particlemodel.particle=Particle element to use:
elementgui.particlemodel.model=Custom java model:
elementgui.particlemodel.render_type=Model render type:
elementgui.particlemodel.custom_model=Custom model:
elementgui.particlemodel.model_scale=Model scale:
elementgui.particlemodel.model_rotation_x=Model X axis rotation:
elementgui.particlemodel.model_rotation_y=Model Y axis rotation:
elementgui.particlemodel.model_rotation_z=Model Z axis rotation:
elementgui.particlemodel.scale_rotation=Scale and rotation
elementgui.particlemodel.needs_particle=You must select a particle element.
elementgui.particlemodel.needs_model=You must select a model.
elementgui.particlemodel.has_model=The selected particle element already has a model.

# suppress inspection "TrailingSpacesInProperty" for whole file
# suppress inspection "UnusedProperty" for whole file
blockly.block.play_newgeckoanim=If entity element %1 is the %3 then play the animation %2
blockly.block.stop_procedure=If entity element %1 is the %2 then stop current procedure triggered animation
blockly.category.geckolib=GeckoLib
modelement.animatedblock=Animated Block
modelement.animatedblock.description=A GeckoLib animated block.
elementgui.animatedblock.model=GeckoLib block model:
elementgui.animatedblock.page_blockstates=Blockstates
elementgui.animatedblock.add_blockstate=Add blockstate
elementgui.animatedblock.blockstate=Blockstate
elementgui.animatedblock.blockstate_properties=Blockstate properties
elementgui.animatedblock.modelname=Invalid model!
elementgui.animatedblock.blockstate_texture=Block texture
blockly.block.block_animation=Play animation named %4 to the block at x: %1 y: %2 z: %3
blockly.block.stop_block_animation=Stop any procedure triggered block animation at x: %1 y: %2 z: %3
blockly.block.get_entity_animation=If entity element %1 is the %2 then get current procedure triggered animation
modelement.animateditem=Animated Item
modelement.animateditem.description=A GeckoLib animated item.
elementgui.animateditem.model=GeckoLib item model
elementgui.animateditem.disable_swing=Disable arm swing animation
elementgui.animateditem.modelname=Invalid model!
elementgui.aniblockitems.display_settings_missing=Missing display settings!
elementgui.aniblockitems.display_settings=GeckoLib display settings:
elementgui.aniblockitems.animation_count=Block procedure animations:
elementgui.aniblockitems.animate_blockitem=Animate block item:
blockly.block.item_animation=If item element %1 is the item %3 then play the animation %2
blockly.block.stop_item_animation=If item element %1 is the item %2 then stop current procedure triggered animation
blockly.block.get_item_animation=If item element %1 is the item %2 then get current procedure triggered animation
blockly.block.no_animation=No animation
blockly.block.get_armor_item=Get %1 of animated armor from element registry name %2
blockly.block.set_entity_texture=If entity element %1 is the %2 then set texture to %3
blockly.block.get_entity_texture=If entity element %1 is the %2 then get its texture
blockly.block.is_geckolib_entity=Is %1 a GeckoLib entity
blockly.block.set_armor_animation=If item %3 is part of the armor element %1 then play the animation %2
blockly.block.stop_armor_animation=If item %2 is part of the armor element %1 then stop current procedure triggered animation
dialog.geckolib.error_no_dependency=GeckoLib not found
dialog.geckolib.enable_geckolib=You are attempting to create a GeckoLib element, but it is not enabled in workspace settings. Saving the element without it will cause a build error.
menubar.geckolib=GeckoLib
action.workspace.resources.import_geckolib_model=Import GeckoLib model...
action.workspace.resources.import_display_settings=Import GeckoLib display settings...
action.tutorial=Official plugin tutorial
modelement.animatedentity=Animated Entity
modelement.animatedentity.description=A GeckoLib animated entity.
elementgui.living_entity.condition_solid_bounding_box=Solid bounding box condition
elementgui.animatedentity.modelname=Invalid model!
elementgui.animatedentity.entity_model=<html>Entity model:<br><small>Supported: GECKOLIB
elementgui.animatedentity.animations_page=Animations
elementgui.animatedentity.disable_death_rotation=Disable entity death rotation
elementgui.animatedentity.death_time=Entity death time in ticks
elementgui.animatedentity.idle_required=The entity must have an idle animation!
elementgui.animatedentity.animation_name=Animation name:
elementgui.animatedentity.idle_animation=Idle animation
elementgui.animatedentity.walk_animation=Walking animation
elementgui.animatedentity.death_animation=Death animation
elementgui.animatedentity.attack_animation=Attack animation
elementgui.animatedentity.swim_animation=Swim animation
elementgui.animatedentity.sneak_animation=Sneak animation
elementgui.animatedentity.sprint_animation=Sprint animation
elementgui.animatedentity.flight_animation=Flight animation
elementgui.animatedentity.riding_animation=Riding animation
elementgui.animatedentity.aggression_animation=Aggression animation
elementgui.animatedentity.animations_boarder=Built-In Animations
elementgui.animatedentity.death_animations_boarder=Death Animation Settings
elementgui.animatedentity.extras_boarder=Extra Animations
elementgui.animatedentity.finished_dying=When death time is reached
elementgui.animatedentity.head_movement=Head movement animation
elementgui.animatedentity.attack_interval=Attack animation length in ticks:
elementgui.animatedentity.group_name=Model group name:
elementgui.animatedentity.conditional_animation=Play returned animation
elementgui.animatedentity.lerp=Animation transition ticks
elementgui.animatedentity.baby_model=Child model scale:
elementgui.animatedentity.loop_animation=Loop external animations
elementgui.animatedentity.eye_height=Change entity eye height to:
elementgui.animatedentity.visual_scale=Entity Visual Scale:
elementgui.animatedentity.bounding_box_scale=Bounding Box Scale:
elementgui.animateditem.idle_animation=Idle animation name:
elementgui.animateditem.needs_idle=The item needs an idle animation!
elementgui.animateditem.perspective=Perspective to play animations in:
elementgui.animateditem.first_person=Enable first person arm rendering
elementgui.animateditem.left_arm=Left arm group name:
elementgui.animateditem.right_arm=Right arm group name:
elementgui.animateditem.page_hands=Arm pose
elementgui.animateditem.enable_arm_pose=Enable custom arm pose
elementgui.animateditem.armpose_values=Arm rotation values
elementgui.animateditem.add_arm_entry=Add arm pose
elementgui.animateditem.arm_held=When held in arm:
elementgui.animateditem.swings=Has the arm swinging animation
elementgui.animateditem.arm=Arm to rotate:
elementgui.animateditem.rotation_angle=Rotation angle:
elementgui.animateditem.rotation=Rotation value:
elementgui.animateditem.follows_head=Follows head rotation
elementgui.animateditem.geckolib_model=<html>Item model:<br><small>Select the item model to be used. Supported: GECKOLIB
modelement.animatedarmor=Animated Armor
modelement.animatedarmor.description=A GeckoLib animated set of armor.
elementgui.animatedarmor.geckolib_properties=GeckoLib properties
elementgui.animatedarmor.texture=Armor Texture:
elementgui.animatedarmor.model_name=GeckoLib model:
elementgui.animatedarmor.modelname=Invalid model name!
elementgui.animatedarmor.texture_invalid=A texture must be selected!
elementgui.animatedarmor.idle_required=The armor must have an idle animation!
elementgui.animatedarmor.idle_animation=Idle animation name:
elementgui.animatedarmor.fully_equipped=Only animate while fully equipped
elementgui.animatedarmor.head=Armor model head group name:
elementgui.animatedarmor.chest=Armor model chestplate group name:
elementgui.animatedarmor.right_arm=Armor model right arm group name:
elementgui.animatedarmor.left_arm=Armor model left arm group name:
elementgui.animatedarmor.right_leg=Armor model right leg group name:
elementgui.animatedarmor.left_leg=Armor model left leg group name:
elementgui.animatedarmor.right_boot=Armor model right boot group name:
elementgui.animatedarmor.left_boot=Armor model left boot group name:
dialog.selector.animatedarmor.title=Animated armor selection
dialog.selector.animatedarmor.message=Please select an animated armor:
dialog.selector.animatedentity.title=Animated entity selection
dialog.selector.animatedentity.message=Please select an animated entity:
dialog.selector.animateditem.title=Animated item selection
dialog.selector.animateditem.message=Please select an animated item:
dialogs.convert_to_geckolib=Entity element converter
dialogs.convert_button=Convert to GeckoLib
dialogs.convert_from_geckolib=GeckoLib element converter
dialogs.convert_from_button=Convert to regular Entity
dialog.generator_selector.coverage.animatedentity=GeckoLib placeholder
dialog.generator_selector.coverage.operation=GeckoLib placeholder
dialog.generator_selector.coverage.animatedarmor=GeckoLib placeholder
dialog.generator_selector.coverage.attribute=Attributes
dialog.generator_selector.coverage.animateditem=GeckoLib placeholder
dialog.generator_selector.coverage.slot=GeckoLib placeholder
workspace.3dmodels.delete_selected=Delete selected
workspace.3dmodels.delete_confirm_message=Are you sure you want to delete this file?
elementgui.living_entity.page_visual_and_sound=Visual and sound
elementgui.item.glowcondition=Item glowing condition
elementgui.item.tooltip_tip=Special information:
elementgui.living_entity.min_spawn_group_size=Minimum spawn group size:
elementgui.living_entity.max_spawn_group_size=Maximum spawn group size:
elementgui.living_entity.glow_texture=Entity glowing texture:
elementgui.block.gen_min_height=Minimum generation height:
elementgui.block.gen_max_height=Maximum generation height:
elementgui.block.event_generate_condition=Additional generation condition:

# suppress inspection "TrailingSpacesInProperty" for whole file
# suppress inspection "UnusedProperty" for whole file
blockly.category.curios=Curios API
trigger.curio_equip_return=On curios slot change, return equipped item
trigger.curio_unequip_return=On curios slot change, return unequipped item
blockly.block.is_curioitem=Is %1 a curios bauble
blockly.block.is_curio=Can %1 be equipped in a curios slot
blockly.block.curio_equipped_foreach=For each item %1 in the curios slots of %2 as %3 do %4
blockly.block.is_equipped=Does %1 have a %2 equipped
elementgui.item.condition_glow=Make item glow
elementgui.common.creative_tab=Creative tab
modelement.curiosbauble=Curios Bauble
modelement.curiosbauble.description=A Curios API bauble item.
elementgui.curiosbauble.curio_tick=While bauble is equipped tick
elementgui.curiosbauble.on_equip=When bauble is equipped
elementgui.curiosbauble.on_unequip=When bauble is unequipped
elementgui.curiosbauble.properties=Bauble properties
elementgui.curiosbauble.slot_type=Bauble slot type:
elementgui.curiosbauble.add_slots=Should this bauble add new Curios slots?
elementgui.curiosbauble.slot_amount=Amount of slots of this type to add:
elementgui.curiosbauble.piglins=Make piglins neutral while worn
elementgui.curiosbauble.endermask=Make endermen neutral while worn
elementgui.curiosbauble.has_model=Render a custom model while equipped?
elementgui.curiosbauble.java_model=Custom bauble java model:
elementgui.curiosbauble.model_texture=Custom bauble model texture:
elementgui.curiosbauble.rotate_model=Rotate the model with the player while sneaking
elementgui.curiosbauble.translate_model=Translate the model pose while sneaking
elementgui.curiosbauble.needs_api=Curios API (Adorned) must be enabled in workspace settings to save this element.
modelement.curiosslot=Curios Slot
modelement.curiosslot.description=A custom Curios API slot.
elementgui.curiosslot.slot_name=Slot name:
elementgui.curiosslot.slot_amount=Amount of slots to add:
elementgui.curiosslot.needs_name=The curios slot must have a name.

blockly.category.file_manager=File Manager
blockly.category.file_manager_actions=Actions
blockly.category.file_manager_data=Data
blockly.category.file_manager_utils=Utils
blockly.category.file_manager_jsonarray=Lists
blockly.block.add_json_object=Add JSON object %1 to %3 and set value to %2
blockly.block.add_json_property=Add JSON property %1 to %3 and set value to %2
blockly.block.blockstate_to_string=Blockstate %1 to String
blockly.block.copy_file=Copy %1 to %2
blockly.block.copy_file.tooltip=Create a new file exactly like the original
blockly.block.create_file=Create the file %1
blockly.block.direction_to_number=Direction %1 to number
blockly.block.direction_to_number.description=Down: 0, Up: 1, North: 2, South: 3, West: 4 and East: 5
blockly.block.file_exists=Does %1 exist
blockly.block.file_variable=File %1 named %2 and located at %3
blockly.block.get_client_directory=%1Get the client''s directory
blockly.block.get_file_name=Get the name of %1
blockly.block.get_file_parent_path=Get the parent''s path of %1
blockly.block.get_file_path=Get the path of %1
blockly.block.get_game_directory=Get the game directory
blockly.block.get_game_directory.tooltip=Servers are not supported with Fabric.
blockly.block.get_json_logic=Get JSON logic property %1 of %2
blockly.block.get_json_number=Get JSON number property %1 of %2
blockly.block.get_json_object=Get JSON object property %1 of %2
blockly.block.get_json_propname_from_index=Get JSON property name at index %1 from %2
blockly.block.get_json_size=Get the size of the JSON object %1
blockly.block.get_json_text=Get JSON text property %1 of %2
blockly.block.get_temp_dir=Get temp directory
blockly.block.get_world_name=Get current world''s name
blockly.block.is_directory=Is %1 directory
blockly.block.is_file=Is %1 file
blockly.block.has_json_member=Does JSON %2 contain member %1
blockly.block.is_json_empty=Is JSON empty %1
blockly.block.move_file=Move %1 to %2
blockly.block.move_file.tooltip=Create a new file like the original and delete the original
blockly.block.number_to_direction=Number %1 to direction
blockly.block.number_to_direction.description=Down: 0, Up: 1, North: 2, South: 3, West: 4 and East: 5
blockly.block.parse_json=Parse JSON %1
blockly.block.path_separator=File path separator
blockly.block.json_property_exists=Does JSON %1 have %2
blockly.block.read_txt=For each line of %1 get the text as %2 do %3
blockly.block.remove_json_property=Remove JSON property %1 to %2
blockly.block.read_json=Read JSON file %1 as %3 and get values %2
blockly.block.string_iterator=String iterator
blockly.block.string_to_blockstate=String %1 to blockstate
blockly.block.stringify_json=Stringify JSON %1
blockly.block.unzip=Unzip %1 to location %2
blockly.block.url_to_file=Copy path %1 to %2, connection timeout (in ms) %3, read timeout (in ms) %4
blockly.block.url_to_file.tooltip=It can be used to download an online file.
blockly.block.write_json=Write the JsonObject %2 inside the file %1
blockly.block.write_txt=Write following lines inside %1 as a TXT file %2 at the end of the file %3
blockly.block.write_line=Write %1 in the file %2 and add a new line %3
blockly.block.zip_folder=ZIP to full location and name: %2 folder: %1
blockly.block.zip_multiple_files_from_list=ZIP to full location and name: %2 array list of files: %1
blockly.block.zip_multiple_files_from_list.tooltip=This block requires the Array Lists plugin.
blockly.block.zip_single_file=ZIP to full location and name: %2 file: %1
blockly.block.jsonarray_add_entry=Add entry %2 to JSON array %1
blockly.block.get_jsonarray_size=Get the size of the JSON array %1
blockly.block.get_json_jsonarray=Get JSON array property %1 of %2
blockly.block.add_json_jsonarray=Add JSON array %1 to %3 and set value to %2
blockly.block.jsonarray_get_logic=Get logic entry of JSON array %2 from index %1
blockly.block.jsonarray_get_number=Get number entry of JSON array %2 from index %1
blockly.block.jsonarray_get_text=Get text entry of JSON array %2 from index %1
blockly.block.jsonarray_get_json_object=Get JSON object entry of JSON array %2 from index %1
blockly.block.jsonarray_get_jsonarray=Get JSON array entry of JSON array %2 from index %1
blockly.block.jsonarray_is_empty=Is the JSON array %1 empty
blockly.block.jsonarray_remove_entry=Remove entry at index %2 from JSON array %1
blockly.block.jsonarray_clear=Clear contents of JSON array %1
blockly.block.jsonarray_copy=Copy of JSON array %1
blockly.block.directory_files_foreach=For each file in directory %1 get path as %2 do %3
blockly.block.file_from_path=File %1 from path %2
blockly.block.property_is_json_object=Is JSON property %1 of %2 a JSON object
blockly.block.property_is_json_array=Is JSON property %1 of %2 a JSON array
blockly.block.property_is_boolean=Is JSON property %1 of %2 a boolean
blockly.block.property_is_number=Is JSON property %1 of %2 a number
blockly.block.property_is_string=Is JSON property %1 of %2 a string
blockly.block.json_iterator=JSON iterator
blockly.block.datapack_directory_foreach=For each file in datapack directory %1 read content as %2 do %3
blockly.block.datapack_namespace_directory_foreach=For each file in datapack directory %1 of namespace %2 read content as %3 do %4

trigger.tooltip_event=On tooltip rendering
blockly.category.itemtooltips=Item Tooltips
blockly.block.new_tooltip_line=Render a new tooltip line with text %1
blockly.block.is_key_pressed=Is the key %1 pressed
blockly.block.get_tooltip_line=Get text from tooltip line %1
blockly.block.get_tooltip_line_count=Get the amount of tooltip lines
blockly.block.new_tooltip_line_position=Render a new tooltip line with text %1 in line position %2
blockly.block.get_tooltip_flags=Are advanced tooltips enabled
blockly.block.remove_tooltip_line=Remove tooltip line from position %1

# suppress inspection "UnusedProperty" for whole file
elementgui.attribute.page.new=Attribute
elementgui.attribute.page.entities=Add to entities
elementgui.attribute.add_entry=Add entity type
elementgui.attribute.entity_list_add=Entites to which to add Attribute
elementgui.attribute.description=In-game attribute name
elementgui.attribute.defaultValue=Default Value
elementgui.attribute.minValue=Minimum Value
elementgui.attribute.maxValue=Maximum Value
elementgui.attribute.isPersistent=Remain after death
elementgui.attribute.border=Attribute Properties
elementgui.attribute.warning.minDefault=The minimal value cannot exceed the default value
elementgui.attribute.warning.maxDefault=The maximal value cannot be lower than the default value
elementgui.attribute.warning.minMax=The minial value cannot exceed the maximal value
modelement.attribute=Attribute
modelement.attribute.description=Create a Custom Attribute
dialog.entity_list_entry.remove_entity=Remove entity type
dialog.selector.attribute.title=Attribute selection
dialog.selector.attribute.message=Please select an attribute
blockly.block.add_modifier=Add modifier %3 of an attribute %1 to an entity %2 as permanent %4 check if has modifier before adding %5 (uncheck if you check it yourself)
blockly.block.remove_modifier=Remove modifier %3 of an attribute %1 from an entity %2 as permanent %4
blockly.block.remove_modifier_uuid=Remove modifier with UUID %3 of an attribute %1 from an entity %2 as permanent %4
blockly.block.create_new_modifier=Create new modifier with UUID %1 named %2 with value %3 and operation %4
blockly.block.get_attribute=Get base value of attribute %1 from %2
blockly.block.get_attribute_from_mod=Get base value of attribute %1 from %2
blockly.block.get_attribute_whole=Get value of attribute %1 from %2
blockly.block.get_attribute_whole_from_mod=Get value of attribute %1 from %2
blockly.block.has_attribute=has entity %1 an attribute %2 
blockly.block.has_attribute_from_mod=has entity %1 an attribute %2 
blockly.block.has_modifier=has entity %2 a modifier %3 of an attribute %1
blockly.block.has_modifier_uuid=has entity %2 a modifier with UUID %3 of an attribute %1
blockly.block.set_attribute=Set base value of attribute %1 of %2 to %3
blockly.block.set_attribute_from_mod=Set base value of attribute %1 of %2 to %3

# Event
trigger.item_attribute_modifier=Calculating Attribute Modifiers
blockly.block.remove_modifier_to_item=Remove modifier %1 of an attribute %2 from an item
blockly.block.remove_modifier_to_item_from_mod=Remove modifier %1 of an attribute %2 from an item
blockly.block.add_modifier_to_item_from_mod=Add modifier %1 of an attribute %2 to an item
blockly.block.add_modifier_to_item=Add modifier %1 of an attribute %2 to an item
blockly.block.event_modifier_slot=For slot %1 do %2

# Deprecated
blockly.block.add_item_modifier=Add or replace modifier %3 of an attribute %1 to an item %2 on slot %4 (REMOVED IN 1.20.6)

blockly.block.delete_file=Delete the file %1

modelement.mixin=Mixin
modelement.mixin.name=Create a mixin
modelement.mixin.description=A custom code mod element that is applied as a mixin

modelement.endbiome=End biome
modelement.endbiome.name=Create an end biome
modelement.endbiome.description=An end biome generates a biome in the end dimension
modelement.endstone=Endstone
modelement.endstone.name=Create an endstone
modelement.endstone.description=An endstone is a block that chorus plants can grow on
elementgui.endbiome.biome=Biome element:
elementgui.endbiome.generation=Generation type:
elementgui.endbiome.weight=Biome weight:
elementgui.endbiome.midlands=Surrounding midlands biome:
elementgui.endbiome.barrens=Surrounding barrens biome:
elementgui.endbiome.props_border=Biome properties
elementgui.endbiome.subbiomes_border=Highlands sub-biomes
elementgui.endbiome.needs_biome=You must select a biome element.
elementgui.endbiome.is_end=The selected biome element is already an end biome.
elementgui.endbiome.needs_mixins=You need to have the forge mixins support plugin installed to make an end biome in this generator type.
elementgui.endstone.block=Block to use:
elementgui.endstone.needs_mixins=You need to have the forge mixins support plugin installed to make an endstone in this generator type.
blockly.block.feature_chorus_plant=Chorus plant

modelement.jeirecipetype=JEI recipe type
modelement.jeirecipetype.name=Create a JEI recipe type
modelement.jeirecipetype.description=A custom just enough items recipe type
modelement.jeirecipe=JEI recipe
modelement.jeirecipe.name=Create a JEI recipe
modelement.jeirecipe.description=A custom just enough items recipe
modelement.anvilrecipe=Anvil recipe
modelement.anvilrecipe.name=Create an anvil recipe
modelement.anvilrecipe.description=A custom vanilla anvil recipe
modelement.jeiinformation=JEI information
modelement.jeiinformation.name=Create JEI information
modelement.jeiinformation.description=Information about a group of items, displayed in JEI
elementgui.jeirecipetype.title=Recipe type title:
elementgui.jeirecipetype.icon=Category tab icon:
elementgui.jeirecipetype.crafting_table=Crafting table used:
elementgui.jeirecipetype.background=GUI background image:
elementgui.jeirecipetype.width=Texture width:
elementgui.jeirecipetype.height=Texture height:
elementgui.jeirecipetype.slot_type=Slot type:
elementgui.jeirecipetype.slot_id=Get item from ingredient:
elementgui.jeirecipetype.add_entry=Add GUI slot
elementgui.jeirecipetype.slots=GUI slots
elementgui.jeirecipetype.crafting_empty=You must choose at least one crafting table.
elementgui.jeirecipetype.recipetype_needs_title=The recipe type must have a title.
elementgui.jeirecipetype.missing_texture=The recipe type must have a background texture.
elementgui.jeirecipe.category=Recipe category:
elementgui.jeirecipe.result=Result item:
elementgui.jeirecipe.result_count=Item count:
elementgui.jeirecipe.ingredients=Recipe ingredients
elementgui.jeirecipe.no_category=You must select a category for the recipe.
elementgui.jeirecipe.no_ingredients=The recipe must have ingredients.
elementgui.jeirecipe.no_result=The recipe must have a result.
elementgui.jeirecipe.ingredient_mismatch=The amount of ingredients in the recipe and recipe type don't match.
elementgui.jei.needs_api=The Just enough items API must be enabled in workspace settings to save this mod element.
elementgui.anvilrecipe.left_item=Left anvil slot item:
elementgui.anvilrecipe.right_item=Right anvil slot item:
elementgui.anvilrecipe.right_item_cost=Right slot item cost:
elementgui.anvilrecipe.xp_cost=XP cost:
elementgui.anvilrecipe.output=Recipe output:
elementgui.jeiinformation.info_items=Items to display the information for:
elementgui.jeiinformation.items_info=Description to display:
elementgui.jeiinformation.needs_description=The items must have a description.
elementgui.jeiinformation.needs_items=You need to include items that use the description.
blockly.block.item_list.ingredient=Ingredient
blockly.block.item_list_mutator.container=Recipe ingredients
blockly.block.item_list_mutator.input=Ingredient
blockly.block.get_recipe_result=Get the result of the recipe type %1 from the ingredients:
dialog.selector.recipes.message=Select a recipe type:

modelement.lootmodifier=Loot modifier
modelement.lootmodifier.name=Create a loot modifier
modelement.lootmodifier.description=A loot modifier injects your own custom loot table's loot into an already existing loot table
elementgui.lootmodifier.modified_table=ID of the loot table to modify:
elementgui.lootmodifier.modifier_table=Loot table to inject from:
elementgui.lootmodified.modifier_needs_provider=You must provide a loot table ID to modify.
elementgui.lootmodifier.needs_modifier=You must provide a loot table element to use in the modifier.

modelement.blockstates=Blockstates
modelement.blockstates.name=Create blockstates
modelement.blockstates.description=Blockstates are used to change the model and texture of your blocks
elementgui.blockstates.add_entry=Add blockstate
elementgui.blockstates.model=Block model and particle texture
elementgui.blockstates.blockstate=Blockstate
elementgui.blockstates.block=Block to add blockstates to:
elementgui.blockstates.needs_block=A block element must be selected.
elementgui.blockstates.already_exists=The selected block element already has blockstates.
elementgui.blockstates.needs_blockstates=You must add at least one blockstate.
elementgui.block.block_textures=Block textures
blockly.category.blockstates=Blockstates
blockly.block.block_get_blockstate=Get current blockstate of %2 %1
blockly.block.block_with_blockstate=%1 with blockstate set to %2 %3
blockly.block.block_set_blockstate=Set current blockstate of block at x: %1 y: %2 z: %3 to %4

elementgui.config.page.new=Configuration file name
elementgui.config.page.procedure=Configuration file variables
modelement.config=Configuration
modelement.config.name=Create a configuration file
modelement.config.description=A mod configuration file
elementgui.config.needs_name=Name cannot be empty
elementgui.config.name=Name of the configuration file:
elementgui.config.categoryname=Name of the configuration category:
elementgui.config.configuration_variables=Variable Type:
elementgui.config.new_category=Add configutarion category
elementgui.config.new_variable=Add configutarion variable
elementgui.config.remove_category=Remove this category
elementgui.config.remove_variable=Remove this variable
elementgui.config.configcategory=Configuration Category
elementgui.config.enable_comment=Variable has a comment
elementgui.config.comment_entry=Variable comment:
elementgui.config.configuration_variable_name=Variable Name:
elementgui.config.variable_value=Default variable value:
elementgui.config.variable_display=Variable display name in file:
elementgui.config.type=Configuration type:
elementgui.config.editor=Configuration editor
elementgui.config.notempty=Name cannot be empty!
elementgui.config.regname=Must be a registry name!
elementgui.config.variable_needs_name=All configuration variables must have names.
elementgui.config.variable_needs_displayname=All configuration variables must have display names.
elementgui.config.category_needs_name=All configuration categories must have names.
dialog.selector.config.title=Configuration file selection
dialog.selector.config.message=Please select a configuration file
blockly.category.configdata=Configuration data
blockly.block.text_variable=Get text variable %1 from configuration element %2
blockly.block.logic_variable=Get logic variable %1 from configuration element %2
blockly.block.number_variable=Get number variable %1 from configuration element %2
blockly.block.stringlist_iterator=Text list iterator
blockly.block.stringlist_variable_foreach=For each entry of text list config variable %1 from configuration element %2 as %3 do %4
blockly.block.config_start=Config start of file
blockly.block.config_start.tooltip=The config file starts being written here
blockly.block.config_category=Category with name %1 %2 %3
blockly.block.config_variable=Variable %2 with name %1 with comment %3
blockly.block.config_logic_variable=Logic variable with display name %1 default value %2
blockly.block.config_number_variable=Number variable with display name %1 default value %2
blockly.block.config_text_variable=Text variable with display name %1 default value %2
blockly.block.config_registryname_variable=Item registry name variable with display name %1 default value %2
blockly.block.config_textlist_variable=Text list variable with display name %1 default value
blockly.block.text_list_mutator.container=Text list
blockly.block.text_list_mutator.input=Text entry

dialog.tools.inject_other_tags.title=Add other tags to the workspace
menu.tags.open_dialog=Open Tags+ Dialog
dialog.tools.inject_tags.text_top=Select tags to add.
dialog.tools.inject_tags.confirm=Confirm
tag.type.extra=Other Mod Tags
dialog.tools.inject_tags.tag.blocks.minecraft.mineable.axe=Blocks that should be mined with an axe.
dialog.tools.inject_tags.tag.blocks.minecraft.mineable.hoe=Blocks that should be mined with a hoe.
dialog.tools.inject_tags.tag.blocks.minecraft.mineable.pickaxe=Blocks that should be mined with a pickaxe.
dialog.tools.inject_tags.tag.blocks.minecraft.mineable.shovel=Blocks that should be mined with a shovel.
dialog.tools.inject_tags.tag.blocks.minecraft.air=Blocks treated as air for light and entity movement.
dialog.tools.inject_tags.tag.blocks.minecraft.all_hanging_signs=Blocks that act as hanging signs.
dialog.tools.inject_tags.tag.blocks.minecraft.all_signs=Blocks that act as signs.
dialog.tools.inject_tags.tag.blocks.minecraft.anvil=Blocks that function as anvils.
dialog.tools.inject_tags.tag.blocks.minecraft.banners=Blocks that represent banners.
dialog.tools.inject_tags.tag.blocks.minecraft.base_stone_nether=Nether stone-like blocks. Add custom Nether stones here.
dialog.tools.inject_tags.tag.blocks.minecraft.base_stone_overworld=Overworld stone-like blocks. Add custom Overworld stones here.
dialog.tools.inject_tags.tag.blocks.minecraft.beds=Blocks used as beds.
dialog.tools.inject_tags.tag.blocks.minecraft.beehives=Blocks that house bees.
dialog.tools.inject_tags.tag.blocks.minecraft.buttons=Blocks that act as buttons for redstone.
dialog.tools.inject_tags.tag.blocks.minecraft.campfires=Blocks that function as campfires.
dialog.tools.inject_tags.tag.blocks.minecraft.candles=Blocks that act as candles.
dialog.tools.inject_tags.tag.blocks.minecraft.crops=Blocks for growing crops.
dialog.tools.inject_tags.tag.blocks.minecraft.doors=Blocks that act as doors.
dialog.tools.inject_tags.tag.blocks.minecraft.edible_for_sheep=Blocks with this tag are edible by sheep.
dialog.tools.inject_tags.tag.blocks.minecraft.dragon_transparent=Blocks the Ender Dragon cannot destroy.
dialog.tools.inject_tags.tag.blocks.minecraft.enchantment_power_transmitter=Blocks that increase enchantment table power.
dialog.tools.inject_tags.tag.blocks.minecraft.enderman_holdable=Blocks that Endermen can hold.
dialog.tools.inject_tags.tag.blocks.minecraft.fall_damage_resetting=Blocks that reset fall damage.
dialog.tools.inject_tags.tag.blocks.minecraft.infiniburn_end=Determines which blocks stay on fire forever in the end.
dialog.tools.inject_tags.tag.blocks.minecraft.infiniburn_nether=Determines which blocks stay on fire forever in the nether.
dialog.tools.inject_tags.tag.blocks.minecraft.infiniburn_overworld=Determines which blocks stay on fire forever in the overworld.
dialog.tools.inject_tags.tag.blocks.minecraft.maintains_farmland=Blocks that keep farmland hydrated.
dialog.tools.inject_tags.tag.blocks.minecraft.moss_replaceable=Blocks that moss can replace.
dialog.tools.inject_tags.tag.blocks.minecraft.nylium=Blocks that act as nylium.
dialog.tools.inject_tags.tag.blocks.minecraft.occludes_vibration_signals=Blocks that block sculk sensor vibrations.
dialog.tools.inject_tags.tag.blocks.minecraft.piglin_repellents=Blocks that repel Piglins.
dialog.tools.inject_tags.tag.blocks.minecraft.portals=Blocks used in portal structures.
dialog.tools.inject_tags.tag.blocks.minecraft.rails=Blocks used as rails for minecarts.
dialog.tools.inject_tags.tag.blocks.minecraft.signs=Blocks used as signs.
dialog.tools.inject_tags.tag.blocks.minecraft.soul_fire_base_blocks=Blocks that support soul fire.
dialog.tools.inject_tags.tag.blocks.minecraft.sword_efficient=Blocks mined faster with a sword.
dialog.tools.inject_tags.tag.blocks.minecraft.unstable_bottom_center=Blocks with weak structural integrity underneath.
dialog.tools.inject_tags.tag.blocks.minecraft.wool=Blocks crafted from wool.
dialog.tools.inject_tags.tag.items.minecraft.axes=Items that act as axes and can break specific blocks or perform actions.
dialog.tools.inject_tags.tag.items.minecraft.axolotl_food=Items that can be fed to axolotls.
dialog.tools.inject_tags.tag.items.minecraft.beacon_payment_items=Items that can be used to power a beacon.
dialog.tools.inject_tags.tag.items.minecraft.bee_food=Items that can be fed to bees.
dialog.tools.inject_tags.tag.items.minecraft.bookshelf_books=Items that are used in bookshelves.
dialog.tools.inject_tags.tag.items.minecraft.brewing_fuel=Items used as fuel for brewing stands.
dialog.tools.inject_tags.tag.items.minecraft.chicken_food=Items that chickens can eat.
dialog.tools.inject_tags.tag.items.minecraft.coals=Items that can be used as fuel in furnaces or campfires.
dialog.tools.inject_tags.tag.items.minecraft.compasses=Items that are qualified as compasses.
dialog.tools.inject_tags.tag.items.minecraft.creeper_drop_music_discs=Items dropped when a creeper is killed by a skeleton.
dialog.tools.inject_tags.tag.items.minecraft.creeper_igniters=Items that can ignite creepers.
dialog.tools.inject_tags.tag.items.minecraft.dampens_vibrations=Items that reduce or block sculk sensor vibrations.
dialog.tools.inject_tags.tag.items.minecraft.enchantable.armor=Items that can be enchanted as armor.
dialog.tools.inject_tags.tag.items.minecraft.enchantable.crossbow=Items that can be enchanted as crossbows.
dialog.tools.inject_tags.tag.items.minecraft.enchantable.fishing=Items that can be enchanted for fishing.
dialog.tools.inject_tags.tag.items.minecraft.enchantable.mace=Items that can be enchanted as maces.
dialog.tools.inject_tags.tag.items.minecraft.enchantable.trident=Items that can be enchanted as tridents.
dialog.tools.inject_tags.tag.items.minecraft.fishes=Items classified as fish, usable for taming or feeding certain mobs.
dialog.tools.inject_tags.tag.items.minecraft.piglin_food=Items that Piglins eat when dropped.
dialog.tools.inject_tags.tag.items.minecraft.piglin_loved=Items Piglins are attracted to and interact with.
dialog.tools.inject_tags.tag.items.minecraft.piglin_repellents=Items that repel Piglins when nearby.
dialog.tools.inject_tags.tag.items.minecraft.piglin_safe_armor=Armor that prevents Piglins from becoming hostile.
dialog.tools.inject_tags.tag.items.minecraft.rabbit_food=Items that rabbits can eat.
dialog.tools.inject_tags.tag.items.minecraft.sheep_food=Items that sheep can eat.
dialog.tools.inject_tags.tag.items.minecraft.smelts_to_glass=Items that smelt into glass in furnaces.
dialog.tools.inject_tags.tag.items.minecraft.soul_fire_base_blocks=Items used as base blocks for soul fire.
dialog.tools.inject_tags.tag.items.minecraft.stone_crafting_materials=Items used for crafting stone tools or blocks.
dialog.tools.inject_tags.tag.items.minecraft.stone_tool_materials=Items used to craft stone tools.
dialog.tools.inject_tags.tag.items.minecraft.trimmable_armor=Items that can have armor trims.
dialog.tools.inject_tags.tag.items.minecraft.villager_plantable_seeds=Seeds that villagers can plant in farms.
dialog.tools.inject_tags.tag.items.minecraft.wolf_food=Items that wolves can eat to heal or tame them.
dialog.tools.inject_tags.tag.entities.minecraft.aquatic=Entities that can breathe underwater.
dialog.tools.inject_tags.tag.entities.minecraft.arthropod=Entities affected by the Bane of Arthropods enchantment.
dialog.tools.inject_tags.tag.entities.minecraft.axolotl_always_hostiles=Entities that axolotls are always hostile towards.
dialog.tools.inject_tags.tag.entities.minecraft.axolotl_hunt_targets=Entities that axolotls hunt when nearby.
dialog.tools.inject_tags.tag.entities.minecraft.can_turn_in_boats=Entities that can turn while riding in boats.
dialog.tools.inject_tags.tag.entities.minecraft.deflects_projectiles=Entities that deflect projectiles on contact.
dialog.tools.inject_tags.tag.entities.minecraft.dismounts_underwater=Entities that dismount riders when submerged.
dialog.tools.inject_tags.tag.entities.minecraft.fall_damage_immune=Entities immune to fall damage.
dialog.tools.inject_tags.tag.entities.minecraft.freeze_hurts_extra_types=Entities that take extra damage from freezing.
dialog.tools.inject_tags.tag.entities.minecraft.freeze_immune_entity_types=Entities immune to freezing effects.
dialog.tools.inject_tags.tag.entities.minecraft.frog_food=Entities that frogs can eat.
dialog.tools.inject_tags.tag.entities.minecraft.ignores_poison_and_regen=Entities unaffected by poison or regeneration effects.
dialog.tools.inject_tags.tag.entities.minecraft.illager_friends=Entities that illagers consider allies.
dialog.tools.inject_tags.tag.entities.minecraft.inverted_healing_and_harm=Entities where healing harms and harming heals.
dialog.tools.inject_tags.tag.entities.minecraft.redirectable_projectiles=Entities whose projectiles can be redirected.
dialog.tools.inject_tags.tag.entities.minecraft.sensitive_to_bane_of_arthropods=Entities affected by the Bane of Arthropods enchantment.
dialog.tools.inject_tags.tag.entities.minecraft.sensitive_to_impaling=Entities affected by the Impaling enchantment.
dialog.tools.inject_tags.tag.entities.minecraft.sensitive_to_smite=Entities affected by the Smite enchantment.
dialog.tools.inject_tags.tag.entities.minecraft.wither_friends=Entities that are considered allies by the Wither.
dialog.tools.inject_tags.tag.biomes.minecraft.has_closer_water_fog=Biomes where water fog is closer to the player.
dialog.tools.inject_tags.tag.biomes.minecraft.increased_fire_burnout=Biomes where fire burns out more quickly.
dialog.tools.inject_tags.tag.biomes.minecraft.is_badlands=Biomes classified as badlands.
dialog.tools.inject_tags.tag.biomes.minecraft.is_beach=Biomes classified as beaches.
dialog.tools.inject_tags.tag.biomes.minecraft.is_deep_ocean=Biomes classified as deep oceans.
dialog.tools.inject_tags.tag.biomes.minecraft.is_jungle=Biomes classified as jungles.
dialog.tools.inject_tags.tag.biomes.minecraft.is_taiga=Biomes classified as taigas.
dialog.tools.inject_tags.tag.biomes.minecraft.mineshaft_blocking=Biomes where mineshafts do not generate.
dialog.tools.inject_tags.tag.biomes.minecraft.more_frequent_drowned_spawns=Biomes where drowned spawn more frequently.
dialog.tools.inject_tags.tag.biomes.minecraft.produces_corals_from_bonemeal=Biomes where corals can grow using bonemeal.
dialog.tools.inject_tags.tag.biomes.minecraft.reduce_water_ambient_spawns=Biomes with reduced ambient water mob spawns.
dialog.tools.inject_tags.tag.biomes.minecraft.snow_golem_melts=Biomes where snow golems melt over time.
dialog.tools.inject_tags.tag.biomes.minecraft.stronghold_biased_to=Biomes where strongholds are more likely to generate.
dialog.tools.inject_tags.tag.biomes.minecraft.water_on_map_outlines=Biomes where water is outlined on maps.
dialog.tools.inject_tags.tag.biomes.minecraft.without_zombie_sieges=Biomes where zombie sieges do not occur.
dialog.tools.inject_tags.tag.structures.minecraft.cats_spawn_as_black=Structures where black cats spawn.
dialog.tools.inject_tags.tag.structures.minecraft.ocean_ruin=Is a type of ocean ruins.
dialog.tools.inject_tags.tag.structures.minecraft.on_ocean_explorer_maps=Structures shown on ocean explorer maps.
dialog.tools.inject_tags.tag.structures.minecraft.on_woodland_explorer_maps=Structures shown on woodland explorer maps.
dialog.tools.inject_tags.tag.structures.minecraft.ruined_portal=Is a type of ruined portal.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.armor=Mutually exclusive enchantments for armor.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.boots=Mutually exclusive enchantments for boots.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.bow=Mutually exclusive enchantments for bows.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.crossbow=Mutually exclusive enchantments for crossbows.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.damage=Mutually exclusive enchantments for tools that deal damage.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.mining=Mutually exclusive enchantments for tools that mine.
dialog.tools.inject_tags.tag.enchantments.minecraft.exclusive_set.riptide=Mutually exclusive enchantments for riptide tridents.
dialog.tools.inject_tags.tag.enchantments.minecraft.double_trade_price=Enchantments that double trade prices with villagers.
dialog.tools.inject_tags.tag.enchantments.minecraft.in_enchanting_table=Enchantments available in the enchanting table.
dialog.tools.inject_tags.tag.enchantments.minecraft.non_treasure=Enchantments not qualified as treasure.
dialog.tools.inject_tags.tag.enchantments.minecraft.on_mob_spawn_equipment=Enchantments found on equipment spawned with mobs.
dialog.tools.inject_tags.tag.enchantments.minecraft.on_random_loot=Enchantments that appear on random loot.
dialog.tools.inject_tags.tag.enchantments.minecraft.on_traded_equipment=Enchantments on equipment obtained from trading.
dialog.tools.inject_tags.tag.enchantments.minecraft.prevents_ice_melting=Enchantments that prevent ice from melting.
dialog.tools.inject_tags.tag.game_events.minecraft.allay_can_listen=Game events in this tag can be listened to by allays.
dialog.tools.inject_tags.tag.game_events.minecraft.ignore_vibrations_sneaking=Game events in this tag are ignored by sculk sensors if the source entity is sneaking.
dialog.tools.inject_tags.tag.game_events.minecraft.vibrations=Game events in this tag trigger sculk sensors and notify the warden.
dialog.tools.inject_tags.tag.biomes.waystones.has_structure.waystone=Waystones: Biomes containing waystone structures.
dialog.tools.inject_tags.tag.biomes.waystones.has_structure.mossy_waystone=Waystones: Biomes containing mossy waystone structures.
dialog.tools.inject_tags.tag.biomes.waystones.has_structure.sandy_waystone=Waystones: Biomes containing sandy waystone structures.
dialog.tools.inject_tags.tag.biomes.waystones.has_structure.blackstone_waystone=Waystones: Biomes containing blackstone waystone structures.
dialog.tools.inject_tags.tag.biomes.waystones.has_structure.end_stone_waystone=Waystones: Biomes containing end stone waystone structures.
dialog.tools.inject_tags.tag.items.forge.ingots.iron=Forge: Iron Ingot
dialog.tools.inject_tags.tag.blocks.forge.ores.copper=Forge: Copper Ore
dialog.tools.inject_tags.tag.blocks.create.contraptions.movable=Create: Movable Contraptions
dialog.tools.inject_tags.tag.items.thermal.tools.wrenches=Thermal Expansion: Wrenches


# Categories
blockly.category.fluid_control=Fluid Control
blockly.category.fluids=Fluids
blockly.category.fluid_tanks=Fluid Tanks
blockly.category.fluid_type=Fluid Type

# Variable FluidStack
blockly.block.return_fluidstack=Return fluidstack
blockly.block.set_var_fluidstack=Set fluidstack
blockly.block.get_var_fluidstack=Get fluidstack
blockly.block.custom_dependency_fluidstack=Fluidstack dependency
blockly.block.procedure_retval_fluidstack=Call procedure and get fluidstack return value

# Fluids
blockly.block.fluids_getFluidStack=Get Fluid %1
blockly.block.fluids_getFluidFromBlock=Get fluid from fluidblock at x: %1 z: %2 z: %3 if it is a source block
blockly.block.fluids_emptyFluidStack=Empty FluidStack
blockly.block.fluids_getFluidWithAmount=Get %1 with %2 mb
blockly.block.fluids_setAmount=Set Amount of %1 to %2 mB
blockly.block.fluids_getAmount=Get Amount of %1
blockly.block.fluids_addAmount=Add %2 mB to %1
blockly.block.fluids_removeAmount=Remove %2 mB from %1
blockly.block.fluids_isEmpty=Is Empty %1
blockly.block.fluids_isSameAs=Is %1 the same fluidstack as %2
blockly.block.fluids_getFluidFromRegistryName=Convert registry name %1 to fluid or EMPTY if conversion fails
blockly.block.fluids_getRegistryName=Get Registry Name of %1
blockly.block.fluids_getDisplayName=Get Display Name of %1
blockly.block.fluids_getFluidFromBucket=Get Fluid from Bucket %1
blockly.block.fluids_getBucket=Get Bucket of %1

# FluidHandler
blockly.block.fluidHandler_doesBlockHaveTank=Does Block at x: %1 y: %2 z: %3 have a tank
blockly.block.fluidHandler_drainTank=Drain %4 mB from Tank of Block at x: %1 y: %2 z: %3
blockly.block.fluidHandler_drainFluidInTank=Drain %5 mB of %4 from Tank of Block at x: %1 y: %2 z: %3
blockly.block.fluidHandler_fillTank=Fill Tank with %5 mB of %4 at Block x: %1 y: %2 z: %3
blockly.block.fluidHandler_getFluidFromBlock=Get copy of Fluid from Tank of Block at x: %1 y: %2 z: %3
blockly.block.fluidHandler_getAmountInTank=Get Amount of Fluid in Tank at x: %1 y: %2 z: %3
blockly.block.fluidHandler_getTankSize=Get Size of Tank at x: %1 y: %2 z: %3
blockly.block.fluidHandler_isFluidValid=Can Fluid %4 be inserted into Block at x: %1 y: %2 z: %3
blockly.block.fluidUtil_interactWithFluidHandler=Can Item in %5 of %4 interact with Tank of Block at x: %1 y: %2 z: %3

# FluidTypes
blockly.block.fluidType_canConvertToSource=Can %1 create an infinite source
blockly.block.fluidType_canDrownIn=Can %2 drown in %1
blockly.block.fluidType_canExtinguish=Can %2 be extinguished by %1
blockly.block.fluidType_canHydrate=Can %2 be hydrated in %1
blockly.block.fluidType_canPushEntity=Can %1 push %2
blockly.block.fluidType_canSwim=Can %2 swim in %1
blockly.block.fluidType_getDensity=Get Density of %1
blockly.block.fluidType_getFallDistanceModifier=Get Fall Distance Modifier of %2 in %1
blockly.block.fluidType_getLightLevel=Get Light Level of %1
blockly.block.fluidType_getMotionScale=Get Motion Scale of %2 in %1
blockly.block.fluidType_getTemperature=Get Temperature of %1
blockly.block.fluidType_getViscosity=Get Viscosity of %1


# Categories
blockly.category.arraylist=ArrayLists
blockly.category.arraylist_lists=Lists
blockly.category.arraylist_utils=Utils

# Variable ArrayList
blockly.block.return_arraylist=Return ArrayList
blockly.block.set_var_arraylist=Set ArrayList
blockly.block.get_var_arraylist=Get ArrayList
blockly.block.custom_dependency_arraylist=ArrayList dependency
blockly.block.procedure_retval_arraylist=Call procedure and get ArrayList return value

# Blocks
# Lists
blockly.block.arraylist_add_value=Add value %1 to ArrayList %2
blockly.block.arraylist_add_all=Add all values from ArrayList %1 to ArrayList %2
blockly.block.arraylist_set_value=Set value at index %2 to %3 of ArrayList %1
blockly.block.arraylist_get_value=Get value at index %2 of ArrayList %1
blockly.block.arraylist_get_value_as_logic=Get value at index %2 of ArrayList %1 as a Logic value
blockly.block.arraylist_get_value_as_number=Get value at index %2 of ArrayList %1 as a Number
blockly.block.arraylist_get_value_as_string=Get value at index %2 of ArrayList %1 as a String
blockly.block.arraylist_get_value_as_direction=Get value at index %2 of ArrayList %1 as a Direction
blockly.block.arraylist_get_value_as_entity=Get value at index %2 of ArrayList %1 as an Entity %3
blockly.block.arraylist_get_value_as_itemstack=Get value at index %2 of ArrayList %1 as an ItemStack
blockly.block.arraylist_get_value_as_blockstate=Get value at index %2 of ArrayList %1 as a BlockState
blockly.block.arraylist_get_value_as_actionresult=Get value at index %2 of ArrayList %1 as an Action Result
blockly.block.arraylist_get_value_as_arraylist=Get value at index %2 of ArrayList %1 as an ArrayList
blockly.block.arraylist_get_value_as_file=Get value at index %2 of ArrayList %1 as a File
blockly.block.arraylist_get_value_as_jsonobject=Get value at index %2 of ArrayList %1 as a JsonObject
blockly.block.arraylist_get_value_as_jsonarray=Get value at index %2 of ArrayList %1 as a JsonArray
blockly.block.arraylist_get_value_as_custom=Get value at index %2 of ArrayList %1 as %3 with default value %4
blockly.block.arraylist_remove_value=Remove value at index %2 of ArrayList %1
blockly.block.arraylist_clear=Clear ArrayList %1
blockly.block.arraylist_sublist_from_to=Get sub ArrayList of %1 from %2 to %3

# Utils
blockly.block.arraylist_size=Get size of ArrayList %1
blockly.block.arraylist_isempty=Is ArrayList Empty %1
blockly.block.arraylist_contain=Does ArrayList %1 contain %2
blockly.block.arraylist_index_of=Get index of %2 in ArrayList %1 or -1 if value is not included
blockly.block.arraylist_fill_arraylist=Fill the first %1 entries of the ArrayList %2 with empty data
blockly.block.arraylist_iterator=Arraylist iterator
blockly.block.arraylist_foreach=For each entry in ArrayList %1 as %2 do %3
blockly.block.arraylist_is_value_logic=Is value at index %2 type Logic of ArrayList %1
blockly.block.arraylist_is_value_number=Is value at index %2 type Number of ArrayList %1
blockly.block.arraylist_is_value_string=Is value at index %2 type String of ArrayList %1
blockly.block.arraylist_is_value_direction=Is value at index %2 type Direction of ArrayList %1
blockly.block.arraylist_is_value_entity=Is value at index %2 type Entity of ArrayList %1
blockly.block.arraylist_is_value_itemstack=Is value at index %2 type ItemStack of ArrayList %1
blockly.block.arraylist_is_value_blockstate=Is value at index %2 type BlockState of ArrayList %1
blockly.block.arraylist_is_value_actionresult=Is value at index %2 type Action Result of ArrayList %1
blockly.block.arraylist_is_value_arraylist=Is value at index %2 type ArrayList of ArrayList %1
blockly.block.arraylist_is_value_file=Is value at index %2 type File of ArrayList %1
blockly.block.arraylist_is_value_jsonobject=Is value at index %2 type JsonObject of ArrayList %1
blockly.block.arraylist_is_value_jsonarray=Is value at index %2 type JsonArray of ArrayList %1
blockly.block.arraylist_is_value_custom=Is value at index %2 type %3 of ArrayList %1
blockly.block.arraylist_convert_to_string=Convert ArrayList %1 to String with entry separator %2
blockly.block.arraylist_convert_to_arraylist=Convert string %1 to ArrayList with entry separator %2


trigger.player_animations_setup=Setup player animations (Player Animator)
blockly.block.play_animation=If %1 is a player, play animation %2 and ignore active animations %3
blockly.block.toggle_firstperson=Set first person arm animations to %1 (DEPRECATED, DO NOT USE)