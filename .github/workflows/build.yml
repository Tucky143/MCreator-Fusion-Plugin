name: Build and Test

permissions:
  checks: write

on:
  push:
    branches:
      - master
      - 'feature/*'
      - 'dev/*'
  pull_request:
    branches:
      - master
      - 'feature/*'
      - 'dev/*'

env:
  # path inside the runner where MCreator will be checked out
  MCREATOR_CHECKOUT_PATH: ${{ github.workspace }}/mcreator-src

jobs:
  build:
    name: Build and Debug
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout plugin repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout MCreator 2025.2
        uses: actions/checkout@v4
        with:
          repository: MCreator/MCreator
          ref: 2025.2.28610
          path: mcreator-src
          fetch-depth: 1

      - name: Debug:Print basic environment
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Runner OS: $(uname -a)"
          echo "Current dir: $(pwd)"
          echo "List top-level files:"
          ls -la || true

      - name: Debug:Show repo and mcreator-src structure
        run: |
          echo "=== plugin repo files ==="
          ls -la "$GITHUB_WORKSPACE" || true
          echo
          echo "=== gradle dir (plugin) ==="
          ls -la gradle || true
          echo
          echo "=== plugin gradle wrapper files (if any) ==="
          if [ -f gradle/wrapper/gradle-wrapper.jar ]; then echo "plugin gradle-wrapper.jar FOUND"; else echo "plugin gradle-wrapper.jar MISSING"; fi
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then echo "plugin gradle-wrapper.properties FOUND"; else echo "plugin gradle-wrapper.properties MISSING"; fi
          echo
          echo "=== mcreator-src top-level (first 200 entries) ==="
          ls -la "$MCREATOR_CHECKOUT_PATH" | sed -n '1,200p' || true
          echo
          echo "=== mcreator-src gradle wrapper check ==="
          if [ -f "$MCREATOR_CHECKOUT_PATH/gradle/wrapper/gradle-wrapper.jar" ]; then echo "mcreator gradle-wrapper.jar FOUND"; else echo "mcreator gradle-wrapper.jar MISSING"; fi

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Show Java version
        run: java -version || true

      - name: Setup Gradle (tooling, used for fallback)
        uses: gradle/actions/setup-gradle@v4

      - name: Show Gradle version (installed)
        run: gradle -v || true

      - name: Ensure gradlew executable (if present)
        run: |
          if [ -f ./gradlew ]; then
            echo "Found gradlew — setting +x"
            chmod +x ./gradlew || true
          else
            echo "No gradlew in repository root"
          fi

      - name: Check for Gradle wrapper JAR (plugin or mcreator)
        id: check_wrapper
        run: |
          if [ -f ./gradle/wrapper/gradle-wrapper.jar ]; then
            echo "wrapper_location=plugin" >> $GITHUB_OUTPUT
          elif [ -f "$MCREATOR_CHECKOUT_PATH/gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "wrapper_location=mcreator" >> $GITHUB_OUTPUT
          else
            echo "wrapper_location=none" >> $GITHUB_OUTPUT
          fi

      - name: Print gradle.properties and wrapper props (debug)
        run: |
          echo "---- gradle.properties (root) ----"
          if [ -f gradle.properties ]; then sed -n '1,200p' gradle.properties; else echo "(none)"; fi
          echo "---- wrapper properties (plugin) ----"
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then sed -n '1,200p' gradle/wrapper/gradle-wrapper.properties; else echo "(none)"; fi
          echo "---- wrapper properties (mcreator-src) ----"
          if [ -f "$MCREATOR_CHECKOUT_PATH/gradle/wrapper/gradle-wrapper.properties" ]; then sed -n '1,200p' "$MCREATOR_CHECKOUT_PATH/gradle/wrapper/gradle-wrapper.properties"; else echo "(none)"; fi

      - name: Prepare Gradle cache cleanup (prevent stale locks)
        run: |
          rm -f ~/.mcreator/gradle/caches/modules-2/modules-2.lock || true
          rm -fr ~/.mcreator/gradle/caches/*/plugin-resolution/ || true
          rm -f ~/.mcreator/gradle/caches/minecraft/deobfedDeps/providedDummy.jar || true
          rm -f ~/.mcreator/gradle/caches/minecraft/deobfedDeps/compileDummy.jar || true
          rm -f ~/.gradle/caches/modules-2/modules-2.lock || true
          rm -f ~/.gradle/caches/modules-2/gc.properties || true

      - name: Build using Gradle wrapper (if plugin wrapper exists)
        if: steps.check_wrapper.outputs.wrapper_location == 'plugin'
        env:
          mcreator_path: ${{ env.MCREATOR_CHECKOUT_PATH }}
        run: |
          echo "Using plugin's gradle wrapper"
          echo "pwd: $(pwd)"
          ls -la gradle || true
          ./gradlew --no-daemon clean build --info
        timeout-minutes: 30

      - name: Build using Gradle wrapper from mcreator (if plugin wrapper missing but mcreator's wrapper exists)
        if: steps.check_wrapper.outputs.wrapper_location == 'mcreator'
        env:
          mcreator_path: ${{ env.MCREATOR_CHECKOUT_PATH }}
        run: |
          echo "No plugin wrapper -- using mcreator-src wrapper (invoke from plugin root but Gradle will download as needed)"
          if [ -f ./gradlew ]; then
            ./gradlew --no-daemon clean build --info
          else
            gradle --no-daemon clean build --info
          fi
        timeout-minutes: 30

      - name: Build using installed Gradle (fallback)
        if: steps.check_wrapper.outputs.wrapper_location == 'none'
        env:
          mcreator_path: ${{ env.MCREATOR_CHECKOUT_PATH }}
        run: |
          echo "No gradle wrapper found (plugin nor mcreator). Falling back to installed gradle."
          gradle --no-daemon clean build --info
        timeout-minutes: 30

      - name: Final debug — list build outputs and show last logs
        if: always()
        run: |
          echo "=== Build outputs ==="
          du -sh build || true
          ls -la build || true
          echo "=== Test results (if any) ==="
          ls -la **/build/test-results || true
          echo "=== Show last 150 lines of Gradle log (if present) ==="
          if [ -f build/gradle.log ]; then tail -n 150 build/gradle.log; else echo "(no build/gradle.log)"; fi
