name: Build and Test

permissions:
  checks: write

on:
  push:
    branches:
      - master
      - 'feature/*'
      - 'dev/*'
  pull_request:
    branches:
      - master
      - 'feature/*'
      - 'dev/*'

env:
  MCREATOR_CHECKOUT_PATH: ${{ github.workspace }}/mcreator-src

jobs:
  build:
    name: Build and Debug
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout plugin repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout MCreator 2025.2
        uses: actions/checkout@v4
        with:
          repository: MCreator/MCreator
          ref: 2025.2.28610
          path: mcreator-src
          fetch-depth: 1

      - name: Debug:show env & top-level
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "MCREATOR_CHECKOUT_PATH: $MCREATOR_CHECKOUT_PATH"
          echo "pwd: $(pwd)"
          uname -a
          ls -la || true

      - name: Show plugin gradle wrapper files (debug)
        run: |
          echo "plugin: gradlew exists? $( [ -f ./gradlew ] && echo yes || echo no )"
          echo "plugin: gradle-wrapper.jar exists? $( [ -f ./gradle/wrapper/gradle-wrapper.jar ] && echo yes || echo no )"
          echo "mcreator-src: gradle-wrapper.jar exists? $( [ -f \"$MCREATOR_CHECKOUT_PATH/gradle/wrapper/gradle-wrapper.jar\" ] && echo yes || echo no )"

      - name: Set up JDK 21 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle (installed fallback)
        uses: gradle/actions/setup-gradle@v4

      - name: Ensure gradlew is executable (if present)
        run: |
          if [ -f ./gradlew ]; then
            chmod +x ./gradlew || true
            echo "made ./gradlew executable"
          else
            echo "no ./gradlew"
          fi

      - name: Prepare gradle cache cleanup
        run: |
          rm -f ~/.mcreator/gradle/caches/modules-2/modules-2.lock || true
          rm -fr ~/.mcreator/gradle/caches/*/plugin-resolution/ || true
          rm -f ~/.mcreator/gradle/caches/minecraft/deobfedDeps/providedDummy.jar || true
          rm -f ~/.mcreator/gradle/caches/minecraft/deobfedDeps/compileDummy.jar || true
          rm -f ~/.gradle/caches/modules-2/modules-2.lock || true
          rm -f ~/.gradle/caches/modules-2/gc.properties || true

      - name: Build:plugin gradle wrapper present (preferred)
        if: ${{ always() && (steps.__noop || true) }} # placeholder to ensure ordering; actual logic below
        run: |
          echo "Determining build strategy..."
          set -euo pipefail

          PLUGIN_GRADLEW="./gradlew"
          PLUGIN_WRAPPER_JAR="./gradle/wrapper/gradle-wrapper.jar"
          MCREATOR_WRAPPER_JAR="${MCREATOR_CHECKOUT_PATH}/gradle/wrapper/gradle-wrapper.jar"

          # Decision tree:
          if [ -f "$PLUGIN_GRADLEW" ] && [ -f "$PLUGIN_WRAPPER_JAR" ]; then
            echo "Found plugin gradlew + wrapper jar → running plugin ./gradlew"
            ./gradlew --no-daemon clean build --info
            exit 0
          fi

          if [ -f "$PLUGIN_GRADLEW" ] && [ ! -f "$PLUGIN_WRAPPER_JAR" ] && [ -f "$MCREATOR_WRAPPER_JAR" ]; then
            echo "Plugin has gradlew but missing wrapper JAR; copying MCreator's wrapper JAR into plugin..."
            mkdir -p ./gradle/wrapper
            cp "$MCREATOR_WRAPPER_JAR" ./gradle/wrapper/gradle-wrapper.jar
            chmod +x ./gradlew || true
            echo "Invoking plugin ./gradlew (now that wrapper jar is present)"
            ./gradlew --no-daemon clean build --info
            exit 0
          fi

          if [ -f "$MCREATOR_WRAPPER_JAR" ] && [ ! -f "$PLUGIN_GRADLEW" ]; then
            echo "No plugin gradlew/script, but MCreator wrapper jar exists. Using installed gradle (safer across workspaces)."
            gradle --no-daemon clean build --info
            exit 0
          fi

          if [ -f "$PLUGIN_GRADLEW" ] && [ ! -f "$PLUGIN_WRAPPER_JAR" ] && [ ! -f "$MCREATOR_WRAPPER_JAR" ]; then
            echo "Plugin has gradlew but no wrapper JAR anywhere → cannot use wrapper. Falling back to installed gradle."
            gradle --no-daemon clean build --info
            exit 0
          fi

          # final fallback
          echo "No wrapper found and no gradlew → using installed gradle."
          gradle --no-daemon clean build --info
        env:
          mcreator_path: ${{ env.MCREATOR_CHECKOUT_PATH }}
        timeout-minutes: 30

      - name: Final debug — list build outputs and recent logs
        if: always()
        run: |
          echo "=== Build outputs (top) ==="
          du -sh build || true
          ls -la build || true
          echo "=== test results ==="
          ls -la **/build/test-results || true
          echo "=== tail gradle logs (if exist) ==="
          if [ -f build/gradle.log ]; then tail -n 200 build/gradle.log; fi
